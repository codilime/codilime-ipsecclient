// Code generated by MockGen. DO NOT EDIT.
// Source: file_handler.go

// Package mock is a generated GoMock package.
package mock

import (
	os "os"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFileHandlerInterface is a mock of FileHandlerInterface interface.
type MockFileHandlerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockFileHandlerInterfaceMockRecorder
}

// MockFileHandlerInterfaceMockRecorder is the mock recorder for MockFileHandlerInterface.
type MockFileHandlerInterfaceMockRecorder struct {
	mock *MockFileHandlerInterface
}

// NewMockFileHandlerInterface creates a new mock instance.
func NewMockFileHandlerInterface(ctrl *gomock.Controller) *MockFileHandlerInterface {
	mock := &MockFileHandlerInterface{ctrl: ctrl}
	mock.recorder = &MockFileHandlerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileHandlerInterface) EXPECT() *MockFileHandlerInterfaceMockRecorder {
	return m.recorder
}

// Remove mocks base method.
func (m *MockFileHandlerInterface) Remove(name string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Remove", name)
	ret0, _ := ret[0].(error)
	return ret0
}

// Remove indicates an expected call of Remove.
func (mr *MockFileHandlerInterfaceMockRecorder) Remove(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockFileHandlerInterface)(nil).Remove), name)
}

// RemoveAll mocks base method.
func (m *MockFileHandlerInterface) RemoveAll(path string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveAll", path)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveAll indicates an expected call of RemoveAll.
func (mr *MockFileHandlerInterfaceMockRecorder) RemoveAll(path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveAll", reflect.TypeOf((*MockFileHandlerInterface)(nil).RemoveAll), path)
}

// WriteFile mocks base method.
func (m *MockFileHandlerInterface) WriteFile(name string, data []byte, perm os.FileMode) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteFile", name, data, perm)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteFile indicates an expected call of WriteFile.
func (mr *MockFileHandlerInterfaceMockRecorder) WriteFile(name, data, perm interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteFile", reflect.TypeOf((*MockFileHandlerInterface)(nil).WriteFile), name, data, perm)
}
